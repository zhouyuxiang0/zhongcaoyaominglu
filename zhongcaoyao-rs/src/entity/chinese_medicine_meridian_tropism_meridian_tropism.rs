//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "chinese_medicine_meridian_tropism_meridian_tropism")]
pub struct Model {
    #[sea_orm(column_name = "chineseMedicineId", primary_key, auto_increment = false)]
    pub chinese_medicine_id: i32,
    #[sea_orm(column_name = "meridianTropismId", primary_key, auto_increment = false)]
    pub meridian_tropism_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::chinese_medicine::Entity",
        from = "Column::ChineseMedicineId",
        to = "super::chinese_medicine::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    ChineseMedicine,
    #[sea_orm(
        belongs_to = "super::meridian_tropism::Entity",
        from = "Column::MeridianTropismId",
        to = "super::meridian_tropism::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    MeridianTropism,
}

impl Related<super::chinese_medicine::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ChineseMedicine.def()
    }
}

impl Related<super::meridian_tropism::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::MeridianTropism.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
